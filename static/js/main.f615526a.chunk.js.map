{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","api/posts.js","App.jsx","index.js"],"names":["PostsList","posts","selectedPostId","setSelectedPostId","toggleDetail","setToggleDetail","className","map","post","key","id","userId","title","type","onClick","defaultProps","BASE_URL","getPostComments","postId","a","fetch","then","result","json","reply","data","response","filter","comment","comments","deleteComment","commentId","method","addComment","name","email","body","JSON","stringify","NewCommentForm","showComments","useState","setName","setEmail","setBody","onSubmit","event","preventDefault","sendComment","placeholder","value","onChange","target","PostDetails","postComments","setPostComments","showedComments","setShowedComments","useEffect","length","getUserPosts","getPostDetails","App","setPosts","setUserId","postDetails","setPostDetails","apiPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f615526a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  posts,\n  selectedPostId,\n  setSelectedPostId,\n  toggleDetail,\n  setToggleDetail,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li\n          key={post.id}\n          className=\"PostsList__item\"\n        >\n          <div>\n            <b>{`[User #${post.userId}]: `}</b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => {\n              setSelectedPostId(post.id);\n              if (selectedPostId === post.id) {\n                setToggleDetail(!toggleDetail);\n              } else {\n                setToggleDetail(true);\n              }\n            }}\n          >\n            {(selectedPostId === post.id && toggleDetail) ? 'Close' : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  selectedPostId: PropTypes.number,\n  setSelectedPostId: PropTypes.func.isRequired,\n  toggleDetail: PropTypes.bool.isRequired,\n  setToggleDetail: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  selectedPostId: null,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments`)\n    .then(result => result.json())\n    .then(reply => reply.data);\n\n  const comments = await response.filter(comment => comment.postId === postId);\n\n  return comments;\n};\n\nexport const deleteComment = async(commentId) => {\n  await fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const addComment = async(postId, name, email, body) => {\n  await fetch(`${BASE_URL}/comments/`, {\n    method: 'POST',\n    body: JSON.stringify({\n      postId, name, email, body,\n    }),\n  });\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewCommentForm.scss';\nimport { addComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ postId, showComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const sendComment = (event) => {\n    event.preventDefault();\n    addComment(postId, name, email, body)\n      .then(showComments);\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={event => sendComment(event)}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  showComments: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostComments, deleteComment } from '../../api/comments';\n\nexport const PostDetails = ({ title, selectedPostId }) => {\n  const [postComments, setPostComments] = useState([]);\n  const [showedComments, setShowedComments] = useState(true);\n\n  const showComments = () => {\n    getPostComments(selectedPostId)\n      .then(setPostComments);\n  };\n\n  useEffect(() => {\n    showComments();\n    setShowedComments(true);\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setShowedComments(!showedComments)}\n        >\n          {`\n          ${showedComments ? 'Hide ' : 'Show '}\n          ${postComments.length} comments`}\n        </button>\n\n        {showedComments && (\n          <ul className=\"PostDetails__list\">\n            {postComments.map(comment => (\n              <li\n                key={comment.id}\n                className=\"PostDetails__list-item\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    deleteComment(comment.id)\n                      .then(showComments);\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={selectedPostId}\n            showComments={showComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  title: PropTypes.string.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const response = await fetch(`${BASE_URL}/posts/`);\n  const posts = await response.json()\n    .then(result => result.data);\n\n  if (userId === 0) {\n    return posts;\n  }\n\n  return posts.filter(post => post.userId === userId);\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const post = await response.json()\n    .then(result => result.data);\n\n  return post;\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport * as apiPosts from './api/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [postDetails, setPostDetails] = useState(null);\n  const [toggleDetail, setToggleDetail] = useState(false);\n\n  useEffect(() => {\n    apiPosts.getUserPosts(userId)\n      .then(setPosts);\n\n    apiPosts.getPostDetails(selectedPostId)\n      .then(setPostDetails);\n  }, [userId, selectedPostId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => setUserId(+event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n            setToggleDetail={setToggleDetail}\n            toggleDetail={toggleDetail}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postDetails && toggleDetail\n            && (\n              <PostDetails\n                {...postDetails}\n                selectedPostId={selectedPostId}\n              />\n            )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}